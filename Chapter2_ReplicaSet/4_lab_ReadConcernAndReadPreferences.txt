

# run replicaset
mongod -f mongod-repl-1.conf 
mongod -f mongod-repl-2.conf 
mongod -f mongod-repl-3.conf 

# In this lab, you will take advantage of different read preferences to increase the availability of your replica set.
# To begin, load the dataset in your Vagrant box into your replica set:

mongoimport --drop \
--host m103-repl/192.168.103.100:27002,192.168.103.100:27001,192.168.103.100:27003 \
-u "m103-admin" -p "m103-pass" --authenticationDatabase "admin" \
--db applicationData --collection products /dataset/products.json

2019-04-23T00:16:14.442+0000	connected to: m103-repl/192.168.103.100:27002,192.168.103.100:27001,192.168.103.100:27003
2019-04-23T00:16:14.445+0000	dropping: applicationData.products
2019-04-23T00:16:17.419+0000	[#.......................] applicationData.products	6.43MB/87.9MB (7.3%)
2019-04-23T00:16:20.418+0000	[###.....................] applicationData.products	12.4MB/87.9MB (14.1%)
2019-04-23T00:16:23.418+0000	[####....................] applicationData.products	17.9MB/87.9MB (20.3%)
2019-04-23T00:16:26.418+0000	[######..................] applicationData.products	23.8MB/87.9MB (27.0%)
2019-04-23T00:16:29.418+0000	[########................] applicationData.products	30.1MB/87.9MB (34.3%)
2019-04-23T00:16:32.418+0000	[#########...............] applicationData.products	36.4MB/87.9MB (41.4%)
2019-04-23T00:16:35.418+0000	[###########.............] applicationData.products	42.5MB/87.9MB (48.3%)
2019-04-23T00:16:38.419+0000	[#############...........] applicationData.products	48.3MB/87.9MB (54.9%)
2019-04-23T00:16:41.423+0000	[##############..........] applicationData.products	53.4MB/87.9MB (60.7%)
2019-04-23T00:16:44.418+0000	[###############.........] applicationData.products	57.4MB/87.9MB (65.3%)
2019-04-23T00:16:47.418+0000	[################........] applicationData.products	61.6MB/87.9MB (70.1%)
2019-04-23T00:16:50.418+0000	[##################......] applicationData.products	67.5MB/87.9MB (76.8%)
2019-04-23T00:16:53.423+0000	[###################.....] applicationData.products	72.2MB/87.9MB (82.1%)
2019-04-23T00:16:56.418+0000	[#####################...] applicationData.products	77.5MB/87.9MB (88.1%)
2019-04-23T00:16:59.418+0000	[######################..] applicationData.products	83.1MB/87.9MB (94.5%)
2019-04-23T00:17:01.707+0000	[########################] applicationData.products	87.9MB/87.9MB (100.0%)
2019-04-23T00:17:01.707+0000	imported 516784 documents

##############################################################

You can check that you've loaded the entire dataset by verifying that there are exactly 
516784 documents in the applicationData.products collection:

mongo --host "m103-repl/192.168.103.100:27001" -u "m103-admin" -p "m103-pass" --authenticationDatabase "admin"

use applicationData
db.products.count()
516784

##############################################################

Once the dataset is fully imported into your replica set, you will simulate a node failure. 
This is similar to the previous lab, but this time you will shut down two nodes.

When two of your nodes are unresponsive, you will not be able to connect to the replica set. 
You will have to connect to the third node, which should be the only healthy node in the cluster.

Which of these readPreferences will allow you to read data from this node? 
nearest, primaryPreferred, secondaryPreferred and secondary, but primary not!

# shut down two nodes
use admin
db.shutdownServer()

# connect into survivor
mongo --host "192.168.103.100:27002" -u "m103-admin" -p "m103-pass" --authenticationDatabase "admin"

# enables slave
MongoDB Enterprise m103-repl:SECONDARY> rs.slaveOk()

# select db
use applicationData

SECONDARY> db.products.find({}).readPref("nearest")

SECONDARY> db.products.find({}).readPref("primaryPreferred").limit(5)
{ "_id" : ObjectId("573f7197f29313caab89b249"), "sku" : 20000441, "name" : "Unlimited - CD", "type" : "Music", "regularPrice" : 35.99, "salePrice" : 35.99, "shippingWeight" : "0.25" }
{ "_id" : ObjectId("573f7197f29313caab89b21f"), "sku" : 20000053, "name" : "Frontline of K-Pop - CD", "type" : "Music", "regularPrice" : 22.99, "salePrice" : 22.99, "shippingWeight" : "0.25" }
{ "_id" : ObjectId("573f7197f29313caab89b25c"), "sku" : 20000654, "name" : "Louder Than Words - CD", "type" : "Music", "regularPrice" : 9.99, "salePrice" : 9.99, "shippingWeight" : "0.25" }
{ "_id" : ObjectId("573f7197f29313caab89b25d"), "sku" : 20000663, "name" : "Schattenspiel - CD", "type" : "Music", "regularPrice" : 11.99, "salePrice" : 11.99, "shippingWeight" : "0.25" }
{ "_id" : ObjectId("573f7197f29313caab89b26d"), "sku" : 20000836, "name" : "Lady Jane [Single] - CD", "type" : "Music", "regularPrice" : 8.99, "salePrice" : 8.99, "shippingWeight" : "0.25" }

SECONDARY> db.products.find({}).readPref("primary").limit(5)
Error: error: {
	"operationTime" : Timestamp(1555978887, 1),
	"ok" : 0,
	"errmsg" : "not master and slaveOk=false",
	"code" : 13435,
	"codeName" : "NotMasterNoSlaveOk",
	"$clusterTime" : {
		"clusterTime" : Timestamp(1555978887, 1),
		"signature" : {
			"hash" : BinData(0,"IijtJUdxkeNQzDDdwxf90Vq1T4g="),
			"keyId" : NumberLong("6682731042538782721")
		}
	}
}

SECONDARY> db.products.find({}).readPref("secondaryPreferred").limit(5)
{ "_id" : ObjectId("573f7197f29313caab89b249"), "sku" : 20000441, "name" : "Unlimited - CD", "type" : "Music", "regularPrice" : 35.99, "salePrice" : 35.99, "shippingWeight" : "0.25" }
{ "_id" : ObjectId("573f7197f29313caab89b21f"), "sku" : 20000053, "name" : "Frontline of K-Pop - CD", "type" : "Music", "regularPrice" : 22.99, "salePrice" : 22.99, "shippingWeight" : "0.25" }
{ "_id" : ObjectId("573f7197f29313caab89b25c"), "sku" : 20000654, "name" : "Louder Than Words - CD", "type" : "Music", "regularPrice" : 9.99, "salePrice" : 9.99, "shippingWeight" : "0.25" }
{ "_id" : ObjectId("573f7197f29313caab89b25d"), "sku" : 20000663, "name" : "Schattenspiel - CD", "type" : "Music", "regularPrice" : 11.99, "salePrice" : 11.99, "shippingWeight" : "0.25" }
{ "_id" : ObjectId("573f7197f29313caab89b26d"), "sku" : 20000836, "name" : "Lady Jane [Single] - CD", "type" : "Music", "regularPrice" : 8.99, "salePrice" : 8.99, "shippingWeight" : "0.25" }

SECONDARY> db.products.find({}).readPref("secondary").limit(5)
{ "_id" : ObjectId("573f7197f29313caab89b249"), "sku" : 20000441, "name" : "Unlimited - CD", "type" : "Music", "regularPrice" : 35.99, "salePrice" : 35.99, "shippingWeight" : "0.25" }
{ "_id" : ObjectId("573f7197f29313caab89b21f"), "sku" : 20000053, "name" : "Frontline of K-Pop - CD", "type" : "Music", "regularPrice" : 22.99, "salePrice" : 22.99, "shippingWeight" : "0.25" }
{ "_id" : ObjectId("573f7197f29313caab89b25c"), "sku" : 20000654, "name" : "Louder Than Words - CD", "type" : "Music", "regularPrice" : 9.99, "salePrice" : 9.99, "shippingWeight" : "0.25" }
{ "_id" : ObjectId("573f7197f29313caab89b25d"), "sku" : 20000663, "name" : "Schattenspiel - CD", "type" : "Music", "regularPrice" : 11.99, "salePrice" : 11.99, "shippingWeight" : "0.25" }
{ "_id" : ObjectId("573f7197f29313caab89b26d"), "sku" : 20000836, "name" : "Lady Jane [Single] - CD", "type" : "Music", "regularPrice" : 8.99, "salePrice" : 8.99, "shippingWeight" : "0.25" }


##############################################################

The key concept to understand here is that when two nodes go down in a three-node replica set, 
the third node becomes a secondary regardless of whether it started as a primary.

Therefore, connecting to the third node is the same as connecting to a secondary node, 
and any readPreference will work except for primary, which requires all operations to read from the primary node.